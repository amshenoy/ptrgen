#!/usr/bin/python2.7

import sys
import time
from datetime import timedelta
from datetime import datetime, date
from dateutil.parser import parse
import os

def get_run(datestr):
	date_obj = datetime.strptime(datestr, "%Y-%m-%d").date()
	diff = date_obj - date(2014, 12, 19)
	diff = diff.days % 8
	new_date = date_obj - timedelta(days=diff)
	#print new_date
	return new_date.strftime("%Y-%m-%d")

if len(sys.argv) < 2 or len(sys.argv) > 3:
	print "USAGE: ptrgen start_date [template]"
	print "Template will default to TEMPLATE_SUMMER if not specified"
	sys.exit(1)
elif len(sys.argv) == 3:
	template_name = sys.argv[2]
else:
	template_name = "TEMPLATE_SUMMER" # default

if not sys.argv[1]:
	print "ERR: You need to specify a start date!"
	sys.exit(1)

try:
	day1 = parse(sys.argv[1])
except:
	print "ERR: The start date specified is not a valid date format"
	sys.exit(1)
if get_run(sys.argv[1]) != sys.argv[1]:
	print "ERR: The date specified is not the start of a LUCID run"
	sys.exit(1)

day2, day3 = day1 + timedelta(days=1), day1 + timedelta(days=2)
day1, day2, day3 = day1.strftime("%Y-%m-%d"), day2.strftime("%Y-%m-%d"), day3.strftime("%Y-%m-%d")

issue_date = time.strftime("%Y-%m-%dT%H%M%S")
issue_date_colons = time.strftime("%Y-%m-%dT%H:%M:%S")

try:
	template = open("templates/" + template_name).read()
except:
	print "ERR: The template file could not be found!"
	sys.exit(1)

if not os.path.isdir("outbox"):
	os.mkdir("outbox")

outfile = open("outbox/PtrFile_TDS1_LUCID_" + issue_date + "_LUCID-PI.xml", "w")
id = 0
file_id = 0

template = template.replace("{FILE_ID}", str(file_id))

# Number PTR IDs
while True:
	if not "{PTR_ID}" in template:
		break
	template = template.replace("{PTR_ID}", str(id), 1)
	id += 1

template = template.replace("{DAY1}", day1).replace("{DAY2}", day2).replace("{DAY3}", day3)
template = template.replace("{ISSUE_DATE}", issue_date_colons)

outfile.write(template)


print "MSG: PTR file successfully generated as", "PtrFile_TDS1_LUCID_" + issue_date + "_LUCID-PI.xml"
